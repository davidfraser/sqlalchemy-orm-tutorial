To run these tests, simply run steps.py (with -v as an option if you want to see more details)

>>> import sqlalchemy
>>> sqlalchemy.__version__ 
'0.7.9'

How to connect using a database URL - you may want to use echo=True for manual testing

>>> from sqlalchemy import create_engine
>>> engine = create_engine('sqlite:///:memory:', echo=False)

Running a simple SQL statement directly on the connection

>>> engine.execute("select 1").scalar()
1

Importing declarative and setting up a base class:

>>> from sqlalchemy.ext.declarative import declarative_base
>>> Base = declarative_base()

Our first ORM record class:

>>> from sqlalchemy import Column, Integer, String
>>> class User(Base):
...     __tablename__ = 'users'
...
...     id = Column(Integer, primary_key=True)
...     name = Column(String)
...     fullname = Column(String)
...     password = Column(String)
...
...     def __init__(self, name, fullname, password):
...         self.name = name
...         self.fullname = fullname
...         self.password = password
...
...     def __repr__(self):
...        return "<User('%s','%s', '%s')>" % (self.name, self.fullname, self.password)

>>> User.__table__ # doctest: +NORMALIZE_WHITESPACE
Table('users', MetaData(bind=None),
            Column('id', Integer(), table=<users>, primary_key=True, nullable=False),
            Column('name', String(), table=<users>),
            Column('fullname', String(), table=<users>),
            Column('password', String(), table=<users>), schema=None)

>>> User.__mapper__ # doctest: +ELLIPSIS
<Mapper at 0x...; User>

Actually creating the table:

>>> Base.metadata.create_all(engine)

An ORM record:

>>> ed_user = User('ed', 'Ed Jones', 'edspassword')
>>> ed_user.name
'ed'
>>> ed_user.password
'edspassword'
>>> str(ed_user.id)
'None'


>>> from sqlalchemy.orm import sessionmaker
>>> Session = sessionmaker(bind=engine)
>>> session = Session()

>>> session.add(ed_user)

>>> our_user = session.query(User).filter_by(name='ed').first() # doctest:+ELLIPSIS,+NORMALIZE_WHITESPACE
>>> our_user
<User('ed','Ed Jones', 'edspassword')>
>>> ed_user is our_user
True

>>> session.add_all([
...     User('wendy', 'Wendy Williams', 'foobar'),
...     User('mary', 'Mary Contrary', 'xxg527'),
...     User('fred', 'Fred Flinstone', 'blah')])
>>> ed_user.password = 'f8s7ccs'
>>> session.dirty
IdentitySet([<User('ed','Ed Jones', 'f8s7ccs')>])
>>> session.new  # doctest: +SKIP
IdentitySet([<User('wendy','Wendy Williams', 'foobar')>,
<User('mary','Mary Contrary', 'xxg527')>,
<User('fred','Fred Flinstone', 'blah')>])
>>> session.commit()

>>> ed_user.id # doctest: +NORMALIZE_WHITESPACE
1

